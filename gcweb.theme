<?php

use Drupal\Core\Routing\TrustedRedirectResponse;
use Drupal\views\Views;

/**
 * @file
 * Functions to support theming in the GCWEB theme
 */

/**
 * Implements hook_preprocess_HOOK() for links--language-block.html.twig
 * provide language variable to the twig template
 */
function gcweb_preprocess_links__language_block(&$variables) {
  $variables['language'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig
 * redirect non-admin users of external pages to the external page
 * setup variables: date modified, canada.ca search form link and mega menu link for twig template
 */
function gcweb_preprocess_page(&$variables) {
  // find language
  $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();

  if (is_object($node = \Drupal::request()->get('node'))) {
    // redirect all users except comment moderators and admins to dataset page
    if ($node->getType() == 'external') {
      $role = \Drupal::currentUser()->getRoles();
      if (!(in_array('comment_moderator',$role)) && !(in_array('administrator',$role))) {
        $translated_node = $node->getTranslation($lang);
        $path = $translated_node->get('field_url')->getValue();
        $response = new TrustedRedirectResponse($path[0]['uri']);
        $response->send();
      }
    }

    // date modified
    $time = $node->getChangedTime();
    $variables['date_modified'] = \Drupal::service('date.formatter')->format($time, 'custom', 'Y-m-d');
  }
  else {
    $variables['date_modified'] = \Drupal::service('date.formatter')->format(time(), 'custom', 'Y-m-d');
  }

  // search form link
  $variables['search_home_form'] = 'https://www.canada.ca/' . $lang . '/sr/srb.html';
  $variables['megamenu_link'] = 'https://www.canada.ca/content/dam/canada/sitemenu/sitemenu-v2-' . $lang . '.html';
}

/**
 * Implements hook_preprocess_HOOK() for button input
 * add an optional label to form button different from form value field
 * pass label variable to twig to add custom classes
 */
function gcweb_preprocess_input__button(&$variables) {
  if (!empty($variables['element']['#label'])) {
    $variables['label'] = $variables['element']['#label'];
  }
}

/**
 * Implements template_preprocess_user()
 * add recent contents view to the login page
 * add recent comments view to the login page
 */
function gcweb_preprocess_user(&$variables) {
  // recent contents
  $content_recent = Views::getView('content_recent');
  if (is_object($content_recent)) {
    $content_recent->setDisplay('block_1');
    $content_recent->execute();
    $variables['content_recent'] = $content_recent->render();
  }

  // recent comments
  $comments_recent = Views::getView('comments_recent');
  if (is_object($comments_recent)) {
    $comments_recent->setDisplay('block_1');
    $comments_recent->execute();
    $variables['comments_recent'] = $comments_recent->render();
  }
}
